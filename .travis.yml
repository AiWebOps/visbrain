language: python


sudo: false
dist: trusty
python:
    - '3.6'


matrix:
  include:
    - env: TEST=standard
      os: linux
    - env: TEST=minimal
      os: linux
    - env: TEST=examples
      os: linux
    # - env: TEST=standard
    #   os: osx
    #   language: generic


before_install:
    - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    - SRC_DIR=$(pwd)


install:
    - conda create -q -n testenv python=$TRAVIS_PYTHON_VERSION numpy scipy pip
    - source activate testenv
    # Install dependencies :
    - if [ "${TEST}" == "standard" ]; then
        pip install codecov pytest pytest-cov pytest-sugar pytest-travis-fold;
      fi;
    - if [ "${TEST}" == "minimal" ]; then
        pip install flake8 pep8-naming;
      fi;
    - pip install mne nibabel pandas
    # - pip install PyOpenGL PyOpenGL_accelerate
    # - pip install -q freetype-py husl pypng cassowary imageio
    # ------------------- VISBRAIN -------------------
    - cd ${SRC_DIR}
    - pip install -e .


before_script:
    # Fix screen resolution to 1280x1024x16 :
    # - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    #     /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render;
    #   fi;
    - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"


script:
    - if [[ "${TEST}" == "standard" ]]; then
          make test;
      elif [[ "${TEST}" == "minimal" ]]; then
          make flake;
      elif [[ "${TEST}" == "examples" ]]; then
          make examples;
      fi;


notifications:
    email: false
    slack: visbrainteam:lHdzZcFmXQczGlxJEDtQYqv9


after_success:
    - if [ "${TEST}" == "standard" ]; then
        codecov;
      fi
